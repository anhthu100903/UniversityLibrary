/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.PersonBUS;
import BUS.RoleBUS;
import DTO.AccountDTO;
import DTO.PersonDTO;
import DTO.RoleDTO;
import static connection.ConnectDB.conn;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class StaffGUI extends javax.swing.JPanel implements BarcodeListener{
    Scanner_Dialog scannerDialog = new Scanner_Dialog();
    String idScan = "";
    List<PersonDTO> staffList;
    AccountDTO account;
    /**
     * Creates new form StaffGUI
     */
    private PersonBUS personBUS;
    private RoleBUS roleBUS;
    public StaffGUI(AccountDTO account) {
        initComponents();
        this.account = account;
        personBUS = new PersonBUS();
        loadStaffTable();
        ClickStaffTable();
    }
    
    public AccountDTO getAcc(){
        return account;
    }
    
    public void loadStaffTable() {
    try {
        staffList = personBUS.getAllStaff();
        DefaultTableModel model = (DefaultTableModel) staffTable.getModel();
        model.setRowCount(0);
        for (PersonDTO staff : staffList) {
            model.addRow(new Object[]{staff.getId(), staff.getName(), staff.getTel(), staff.getRoleID().getName()});
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
}
    
    private void ClickStaffTable() {
        staffTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int selectedRow = staffTable.getSelectedRow();
                System.out.println(".mouseClicked()");
                if (selectedRow != -1) {
                    staffDetail1.setPersonDTO(staffList.get(selectedRow));
                    staffDetail1.showStaffDetail();
                }
            }
        });

    }
    public void refreshStaffTable() {
        loadStaffTable();
        staffDetail1.setPersonDTO(null);
        staffDetail1.showStaffDetail();
    }
    
    public void searchStaffData(javax.swing.JTable staffTable, String keyword) throws Exception {
    staffList = personBUS.getAllStaff(); // Lấy danh sách nhân viên từ BUS
    DefaultTableModel model = (DefaultTableModel) staffTable.getModel();
    model.setRowCount(0); // Xóa dữ liệu bảng hiện tại

    for (PersonDTO staff : staffList) {
        // Kiểm tra từ khóa có tồn tại trong mã, tên, điện thoại hoặc địa chỉ
        boolean matchesKeyword = keyword.isEmpty()
                || staff.getId().toLowerCase().contains(keyword.toLowerCase())
                || staff.getName().toLowerCase().contains(keyword.toLowerCase())
                || staff.getTel().toLowerCase().contains(keyword.toLowerCase())
                || staff.getAddress().toLowerCase().contains(keyword.toLowerCase());

        // Chỉ thêm vào bảng nếu thỏa mãn từ khóa
        if (matchesKeyword) {
            Object[] row = new Object[]{
                staff.getId(),
                staff.getName(),
                staff.getTel(),
                staff.getRoleID().getName(),
                staff.getAddress()
            };
            model.addRow(row);
        }
    }
}
    private void performSearch() throws Exception {
    String keyword = txtFindStaff.getText().trim(); // Lấy từ khóa từ ô tìm kiếm
    searchStaffData(staffTable, keyword);           // Gọi phương thức tìm kiếm
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder1 = new MyDesign.PanelBorder();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        staffIDTextField = new MyDesign.MyTextField_Basic();
        scanReaderButton = new MyDesign.MyButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        staffNameTextField = new MyDesign.MyTextField_Basic();
        jLabel8 = new javax.swing.JLabel();
        staffTelTextField = new MyDesign.MyTextField_Basic();
        jLabel9 = new javax.swing.JLabel();
        staffAddressTextField = new MyDesign.MyTextField_Basic();
        addButton = new MyDesign.MyButton();
        jLabel2 = new javax.swing.JLabel();
        panelBorder_Basic1 = new MyDesign.PanelBorder_Basic();
        jLabel11 = new javax.swing.JLabel();
        txtFindStaff = new MyDesign.SearchText();
        jScrollPane1 = new javax.swing.JScrollPane();
        staffTable = new MyDesign.MyTable();
        rolecombobox = new javax.swing.JComboBox<>();
        staffDetail1 = new GUI.StaffDetail(this);

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("THÊM NHÂN VIÊN");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Mã nhân viên");

        staffIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffIDTextFieldActionPerformed(evt);
            }
        });

        scanReaderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/img/icon/scan.png"))); // NOI18N
        scanReaderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanReaderButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Vai trò");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Tên nhân viên");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Số điện thoại");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Địa chỉ");

        staffAddressTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffAddressTextFieldActionPerformed(evt);
            }
        });

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/img/icon/add.png"))); // NOI18N
        addButton.setText("Thêm");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("DANH SÁCH NHÂN VIÊN");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/img/icon/search.png"))); // NOI18N

        txtFindStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFindStaffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder_Basic1Layout = new javax.swing.GroupLayout(panelBorder_Basic1);
        panelBorder_Basic1.setLayout(panelBorder_Basic1Layout);
        panelBorder_Basic1Layout.setHorizontalGroup(
            panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder_Basic1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFindStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBorder_Basic1Layout.setVerticalGroup(
            panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder_Basic1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder_Basic1Layout.createSequentialGroup()
                        .addComponent(txtFindStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        staffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã", "Tên", "Số điện thoại", "Vai trò"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        staffTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staffTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(staffTable);

        rolecombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý", "Thủ kho", "Thủ thư" }));
        rolecombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolecomboboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(panelBorder1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(rolecombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(panelBorder1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(235, 235, 235)
                                        .addComponent(panelBorder_Basic1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelBorder1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addComponent(jLabel5)
                            .addGroup(panelBorder1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(27, 27, 27)
                                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(staffNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelBorder1Layout.createSequentialGroup()
                                        .addComponent(staffIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(scanReaderButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(staffAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(staffTelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 30, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(staffIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scanReaderButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rolecombobox, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(staffNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(staffTelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(staffAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelBorder_Basic1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(staffDetail1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(staffDetail1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void scanReaderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanReaderButtonActionPerformed
        // TODO add your handling code here:
        scannerDialog.initAndShowGUI(this);
    }//GEN-LAST:event_scanReaderButtonActionPerformed

    private void staffAddressTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffAddressTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_staffAddressTextFieldActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        try {
        String id = staffIDTextField.getText().trim();
        String name = staffNameTextField.getText().trim();
        String tel = staffTelTextField.getText().trim();
        String address = staffAddressTextField.getText().trim();
        int r = rolecombobox.getSelectedIndex();
        RoleDTO role;
        switch(r){
            case 0:
                role = new RoleDTO("QL", "Quản lý");
                break;
            case 1:
                role = new RoleDTO("TK", "Thủ kho");
                break;
            case 2:
                role = new RoleDTO("TT", "Thủ thư");
                break;
            default:
                role = new RoleDTO("QL", "Quản lý");
                break;
        }
        
         if (id.equals("") || name.equals("") || tel.equals("") || address.equals("")){
            JOptionPane.showMessageDialog(this, "Không được bỏ trống trường nào");
            return;
        }
        if (!id.matches("^\\d{10}$")){
            JOptionPane.showMessageDialog(this, "Mã độc giả không hợp lệ");
            return;
        }
        if (!name.matches("^[\\p{L}\\s]+$")){
            JOptionPane.showMessageDialog(this, "Tên không hợp lệ!");
            return;
        }
        if (!tel.matches("^\\d{10}$")){
            JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ!");
            return;
        }
        try {
            if (personBUS.isPersonIdExist(id)){
                JOptionPane.showMessageDialog(this, "Mã số này đã tồn tại!");
                return;
            }
            if (personBUS.isPersonPhoneExist(tel)){
                JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại!");
                return;
            } 
        } catch (SQLException ex) {
            Logger.getLogger(ReaderGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        PersonDTO staff = new PersonDTO(id, name, tel, address, "", role);
        if (personBUS.addPerson(staff)) {
            JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            loadStaffTable(); // Cập nhật lại bảng
        } else {
            JOptionPane.showMessageDialog(this, "Thêm nhân viên thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_addButtonActionPerformed

    private void search(){
        String keyword = txtFindStaff.getText().trim();
        Vector<String> role = new Vector<String>();
        try {
            staffList = personBUS.searchAllPerson(keyword, role, false);
            setUpTable();
        } catch (Exception ex) {
            Logger.getLogger(ReaderGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void setUpTable(){
        staffTable.setRowCount(0);
            
        for (PersonDTO staff : staffList) {
             Object[] row = new Object[]{
                staff.getId(),
                staff.getName(),
                staff.getTel(),
                staff.getRoleID().getName(),
                staff.getAddress()
            };
            staffTable.addRow(row);
        }
    }
    
    private void txtFindStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFindStaffActionPerformed
        String text = txtFindStaff.getText().trim();
        try {
            performSearch();
        } catch (Exception e1) {
            // TODO Auto-generated catch block
            JOptionPane.showMessageDialog(null,e1.getMessage());
        }
    }//GEN-LAST:event_txtFindStaffActionPerformed

    private void staffIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_staffIDTextFieldActionPerformed

    private void rolecomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolecomboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rolecomboboxActionPerformed

    private void staffTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staffTableMouseClicked

    }//GEN-LAST:event_staffTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private MyDesign.MyButton addButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private MyDesign.PanelBorder panelBorder1;
    private MyDesign.PanelBorder_Basic panelBorder_Basic1;
    private javax.swing.JComboBox<String> rolecombobox;
    private MyDesign.MyButton scanReaderButton;
    private MyDesign.MyTextField_Basic staffAddressTextField;
    private GUI.StaffDetail staffDetail1;
    private MyDesign.MyTextField_Basic staffIDTextField;
    private MyDesign.MyTextField_Basic staffNameTextField;
    private MyDesign.MyTable staffTable;
    private MyDesign.MyTextField_Basic staffTelTextField;
    private MyDesign.SearchText txtFindStaff;
    // End of variables declaration//GEN-END:variables
    @Override
    public void onBarcodeScanned(String barcode) {
        idScan = barcode;
        System.out.println("Scanned barcode in MainClass: " + barcode);
    }
}
